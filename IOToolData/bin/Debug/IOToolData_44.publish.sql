/*
Deployment script for IOTool

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IOTool"
:setvar DefaultFilePrefix "IOTool"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.VITESCOBVDB\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.VITESCOBVDB\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The type for column Id_RequestStatus in table [dbo].[RequestInfo] is currently  NVARCHAR (50) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[RequestInfo])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Requests].[Weight] on table [dbo].[Requests] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column Id_CostCenter in table [dbo].[Requests] is currently  NVARCHAR (50) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NOT NULL.

The type for column Id_Material in table [dbo].[Requests] is currently  NVARCHAR (50) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur and deployment may fail if the column contains data that is incompatible with type  INT NOT NULL.
*/

IF EXISTS (select top 1 1 from [dbo].[Requests])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'The following operation was generated from a refactoring log file 64a4be62-a222-434e-99db-6123c11dd4e1';

PRINT N'Rename [dbo].[Requests].[Materials] to Id_Material';


GO
EXECUTE sp_rename @objname = N'[dbo].[Requests].[Materials]', @newname = N'Id_Material', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file 0ac9bea0-0ed0-4dae-a244-9e4ad7bc9310';

PRINT N'Rename [dbo].[Requests].[CostCenter] to Id_CostCenter';


GO
EXECUTE sp_rename @objname = N'[dbo].[Requests].[CostCenter]', @newname = N'Id_CostCenter', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file c9d0dd3c-d5ae-4704-bed2-18069a3ba35c';

PRINT N'Rename [dbo].[RequestInfo].[Status] to Id_RequestStatus';


GO
EXECUTE sp_rename @objname = N'[dbo].[RequestInfo].[Status]', @newname = N'Id_RequestStatus', @objtype = N'COLUMN';


GO
PRINT N'Altering Table [dbo].[RequestInfo]...';


GO
ALTER TABLE [dbo].[RequestInfo] ALTER COLUMN [Id_RequestStatus] INT NOT NULL;


GO
PRINT N'Altering Table [dbo].[Requests]...';


GO
ALTER TABLE [dbo].[Requests] ALTER COLUMN [Id_CostCenter] INT NOT NULL;

ALTER TABLE [dbo].[Requests] ALTER COLUMN [Id_Material] INT NOT NULL;


GO
ALTER TABLE [dbo].[Requests]
    ADD [Weight] INT NOT NULL;


GO
PRINT N'Creating Table [dbo].[CostCenters]...';


GO
CREATE TABLE [dbo].[CostCenters] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [CC]     NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Materials]...';


GO
CREATE TABLE [dbo].[Materials] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Material] NVARCHAR (50) NOT NULL,
    [Active]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[RequestStatus]...';


GO
CREATE TABLE [dbo].[RequestStatus] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Status] NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[spEmailGroups_All]...';


GO
CREATE PROCEDURE [dbo].[spEmailGroups_All]
AS
begin

	set nocount on;

	select [Id], [Email], [Description], [Alias], [Active]
	from dbo.[EmailGroups]
	where [EmailGroups].[Active] = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_GetByIdStandardModel]...';


GO
CREATE PROCEDURE [dbo].[spPrices_GetByIdStandardModel]
	@Id_OriginCity int,
	@Id_DestinationCity int
AS
begin

	set nocount on;

	select *
	from dbo.[Prices]
	where [Prices].[Id_OriginCity] =  @Id_OriginCity and [Prices].[Id_DestinationCity] = @Id_DestinationCity

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_GetByIdToEdit]...';


GO
CREATE PROCEDURE [dbo].[spPrices_GetByIdToEdit]
	@Id int
AS
begin

	set nocount on;

	select [Prices].[Id] as Id, [Transporters].[Name] as TransporterName, [Prices].[LaneName] as LaneName,
		   [OriginCountry].[Name] as OriginCountry, [OriginCity].[Name] as OriginCity,
		   [DestinationCountry].[Name] as DestinationCountry, [DestinationCity].[Name] as DestinationCity,
		   [RequestType].[Type] as RequestType, [Prices].[Minimum] as Minimum, [Prices].[From1To4Pallets] as From1To4Pallets,
		   [Prices].[From5To8Pallets] as From5To8Pallets, [Prices].[From9To12Pallets] as From9To12Pallets,
		   [Prices].[From13To16Pallets] as From13To16Pallets, [Prices].[From17To20Pallets] as From17To20Pallets,
		   [Prices].[From21To24Pallets] as From21To24Pallets, [Prices].[From25To28Pallets] as From25To28Pallets,
		   [Prices].[From29To32Pallets] as From29To32Pallets, [Prices].[From33To36Pallets] as From33To36Pallets,
		   [Prices].[From37To40Pallets] as From37To40Pallets, [Prices].[From41To44Pallets] as From41To44Pallets,
		   [Prices].[From45To48Pallets] as From45To48Pallets, [Prices].[From49To52Pallets] as From49To52Pallets,
		   [Prices].[From53To56Pallets] as From53To56Pallets, [Prices].[From57To60Pallets] as From57To60Pallets,
		   [Prices].[From61To64Pallets] as From61To64Pallets, [Prices].[Maximum] as Maximum,
		   [Prices].[ShipmentFrequencyLTL] as ShipmentFrequencyLTL, [Prices].[TransitTimeGroupage] as TransitTimeGroupage,
		   [Prices].[TransitTimeLTL] as TransitTimeLTL, [Prices].[CommentsLTL] as CommentsLTL,
		   [Prices].[Tons3_5] as Tons3_5, [Prices].[TransitTime3_5Tons] as TransitTime3_5Tons,
		   [Prices].[ShipmentFrequency3_5Tons] as ShipmentFrequency3_5Tons, [Prices].[Tons7_5] as Tons7_5,
		   [Prices].[ShipmentFrequency7_5Tons] as ShipmentFrequency7_5Tons, [Prices].[Tons24] as Tons24,
		   [Prices].[ShipmentFrequency24Tons] as ShipmentFrequency24Tons, [Prices].[TransitTimeFTL] as TransitTimeFTL,
		   [Prices].[CommentsFTL] as CommentsFTL
	from dbo.[Prices]
	join dbo.[Transporters] on [Prices].[Id_Transporter] = [Transporters].[Id]
	join dbo.[Countries] as OriginCountry on [Prices].[Id_OriginCountry] = [OriginCountry].[Id]
	join dbo.[Cities] as OriginCity on [Prices].[Id_OriginCity] = [OriginCity].[Id]
	join dbo.[Countries] as DestinationCountry on [Prices].[Id_DestinationCountry] = [DestinationCountry].[Id]
	join dbo.[Cities] as DestinationCity on [Prices].[Id_DestinationCity] = [DestinationCity].[Id]
	join dbo.[RequestTypes] as RequestType on [Prices].[Id_RequestType] = [RequestType].[Id]
	where [Prices].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_Update]...';


GO
CREATE PROCEDURE [dbo].[spPrices_Update]
    @Id INT,
    @Minimum MONEY, 
    @From1To4Pallets MONEY, 
    @From5To8Pallets MONEY, 
    @From9To12Pallets MONEY, 
    @From13To16Pallets MONEY, 
    @From17To20Pallets MONEY, 
    @From21To24Pallets MONEY, 
    @From25To28Pallets MONEY, 
    @From29To32Pallets MONEY, 
    @From33To36Pallets MONEY, 
    @From37To40Pallets MONEY, 
    @From41To44Pallets MONEY, 
    @From45To48Pallets MONEY, 
    @From49To52Pallets MONEY, 
    @From53To56Pallets MONEY, 
    @From57To60Pallets MONEY, 
    @From61To64Pallets MONEY, 
    @Maximum MONEY, 
    @ShipmentFrequencyLTL NVARCHAR(50), 
    @TransitTimeGroupage INT, 
    @TransitTimeLTL INT, 
    @CommentsLTL NVARCHAR(100), 
    @Tons3_5 MONEY, 
    @TransitTime3_5Tons INT, 
    @ShipmentFrequency3_5Tons NVARCHAR(50), 
    @Tons7_5 MONEY, 
    @ShipmentFrequency7_5Tons NVARCHAR(50), 
    @Tons24 MONEY, 
    @ShipmentFrequency24Tons NVARCHAR(50), 
    @TransitTimeFTL INT, 
    @CommentsFTL NVARCHAR(100)
AS
begin

	set nocount on;

	update dbo.[Prices]
    set  [Prices].Minimum = @Minimum, 
         [Prices].From1To4Pallets = @From1To4Pallets, 
         [Prices].From5To8Pallets = @From5To8Pallets,
         [Prices].From9To12Pallets = @From9To12Pallets, 
         [Prices].From13To16Pallets = @From13To16Pallets, 
         [Prices].From17To20Pallets = @From17To20Pallets, 
         [Prices].From21To24Pallets = @From21To24Pallets, 
         [Prices].From25To28Pallets = @From25To28Pallets,   
         [Prices].From29To32Pallets = @From29To32Pallets, 
         [Prices].From33To36Pallets = @From33To36Pallets,
         [Prices].From37To40Pallets = @From37To40Pallets, 
         [Prices].From41To44Pallets = @From41To44Pallets,       
         [Prices].From45To48Pallets = @From45To48Pallets, 
         [Prices].From49To52Pallets = @From49To52Pallets, 
         [Prices].From53To56Pallets = @From53To56Pallets, 
         [Prices].From57To60Pallets = @From57To60Pallets,  
         [Prices].From61To64Pallets = @From61To64Pallets, 
         [Prices].Maximum = @Maximum, 
         [Prices].ShipmentFrequencyLTL = @ShipmentFrequencyLTL, 
         [Prices].TransitTimeGroupage = @TransitTimeGroupage,   
         [Prices].TransitTimeLTL = @TransitTimeLTL, 
         [Prices].CommentsLTL = @CommentsLTL, 
         [Prices].Tons3_5 = @Tons3_5, 
         [Prices].TransitTime3_5Tons = @TransitTime3_5Tons, 
         [Prices].ShipmentFrequency3_5Tons = @ShipmentFrequency3_5Tons,
         [Prices].Tons7_5 = @Tons7_5, 
         [Prices].ShipmentFrequency7_5Tons = @ShipmentFrequency7_5Tons,
         [Prices].Tons24 = @Tons24, 
         [Prices].ShipmentFrequency24Tons = @ShipmentFrequency24Tons, 
         [Prices].TransitTimeFTL = @TransitTimeFTL, 
         [Prices].CommentsFTL = @CommentsFTL
  where [Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequestInfo_Insert]...';


GO
CREATE PROCEDURE [dbo].[spRequestInfo_Insert]
	@Id_Request int,
	@Id_Requester int,
	@Id_Processor int,
	@IntervalHoursToPickUp nvarchar(50),
	@CommentRequester nvarchar(200),
	@CommentProcessor nvarchar(200),
	@CommentRequesterForClose nvarchar(200),
	@CommentProcessorForClose nvarchar(200),
	@Id_RequestStatus int,
	@PremiumFreight int,
	@Id int output
AS
begin

	set nocount on;

	insert into dbo.[RequestInfo](Id_Request, Id_Requester, Id_Processor, IntervalHoursToPickUp, CommentRequester, CommentProcessor,
								  CommentRequesterForClose, CommentProcessorForClose, Id_RequestStatus, PremiumFreight)
	values(@Id_Request, @Id_Requester, @Id_Processor, @IntervalHoursToPickUp, @CommentRequester, @CommentProcessor,
		   @CommentRequesterForClose, @CommentProcessorForClose, @Id_RequestStatus, @PremiumFreight)
	
	set @Id = SCOPE_IDENTITY();
end
GO
PRINT N'Creating Procedure [dbo].[spRequests_DeleteByProcessor]...';


GO
CREATE PROCEDURE [dbo].[spRequests_DeleteByProcessor]
	@Id int,
	@CommentProcessorForClose nvarchar(200)
AS
begin

	set nocount on;

	Update dbo.[RequestInfo]
	set [RequestInfo].[Id_RequestStatus] = 5,
	    [RequestInfo].[CommentProcessorForClose] = @CommentProcessorForClose
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_DeleteByRequester]...';


GO
CREATE PROCEDURE [dbo].[spRequests_DeleteByRequester]
	@Id int,
	@CommentRequesterForClose nvarchar(200)
AS
begin

	set nocount on;

	Update dbo.[RequestInfo]
	set [RequestInfo].[Id_RequestStatus] = 5,
	    [RequestInfo].[CommentRequesterForClose] = @CommentRequesterForClose
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetById]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToDelete]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToDelete]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest], [RequestInfo].[CommentProcessorForClose] as [Comment]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToSpecificUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToSpecificUser]
	@Id int,
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

	 select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType], [SupplierFrom].[Name] as [From], 
			[SupplierTo].[Name] as [To], [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], 
			[Requests].[PalletNr] as [PalletNr], [Requests].[Weight] as [Weight], 
			[RequestInfo].[CommentRequester] as [CommentRequester], [RequestStatus].[Status] as [Status]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
 	join dbo.[Users] on [RequestInfo].[Id_Requester] = [Users].[Id]
	join dbo.[Suppliers] as SupplierFrom on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as SupplierTo on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	where [Requests].[Id] = @Id and [Users].[WindowsAccount] = @WindowsAccount

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByUser]
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

  select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType], [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To],
		   [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], [Requests].[PalletNr] as [PalletNr], 
		   [Requests].[Weight] as [Weight], [RequestInfo].[CommentRequester] as [CommentRequester],
		   [RequestStatus].[Status] as [Status]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
 	join dbo.[Users] on [RequestInfo].[Id_Requester] = [Users].[Id]
	join dbo.[Suppliers] as SupplierFrom on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as SupplierTo on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	where [Users].[WindowsAccount] = @WindowsAccount
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetDashboard]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetDashboard]
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [Requests].[Month] as [Month], [RequestTypes].[Type] as [RequestType],
		   [TransportTypes].[Type] as [TransportType], [Requests].[Week] as [Week], [Requests].[ETD] as [ETD],
		   [Requests].[ETA] as [ETA], [SupplierFrom].[Name] as [From], [CityFrom].[Name] as [FromLocation],
		   [SupplierTo].[Name] as [To], [CityTo].[Name] as [ToLocation], [Materials].[Material] as [Materials],
		   [Transporters].[Name] as [Transporter], [Requests].[AWB] as [AWB], [Requests].[Price] as [Price],
		   [CostCenters].[CC] as [CostCenter], [Requests].[BillNr] as [BillNr], [Requests].[PalletNr] as [PalletNr],
		   [Requests].[PricePallet] as [PricePallet]
	from dbo.[Requests]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[TransportTypes] on [Requests].[Id_TransportType] = [TransportTypes].[Id]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	join dbo.[Materials] on [Requests].[Id_Material] = [Materials].[Id]
	join dbo.[Transporters] on [Requests].[Id_Transporter] = [Transporters].[Id]
	join dbo.[CostCenters] on [Requests].[Id_CostCenter] = [CostCenters].[Id]
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_Insert]...';


GO
CREATE PROCEDURE [dbo].[spRequests_Insert]
	@Month nvarchar(50),
	@Id_RequestType int,
	@Id_TransportType int,
	@Week int,
	@ETD datetime2(7),
	@ETA datetime2(7),
	@Id_SupplierFrom int,
	@Id_SupplierTo int,
	@Id_Material int,
	@Id_Transporter int,
	@AWB nvarchar(50),
	@Price money,
	@Id_CostCenter int,
	@BillNr nvarchar(50),
	@PalletNr int,
	@PricePallet money,
	@Weight int,
	@Id int output
AS
begin

	set nocount on;

	insert into dbo.[Requests]([Month], Id_RequestType, Id_TransportType, [Week], ETD, ETA, Id_SupplierFrom, Id_SupplierTo, Id_Material,
							   Id_Transporter, AWB, Price, Id_CostCenter, BillNr, PalletNr, PricePallet, [Weight])
	values(@Month, @Id_RequestType, @Id_TransportType, @Week, @ETD, @ETA, @Id_SupplierFrom, @Id_SupplierTo, @Id_Material,
		   @Id_Transporter, @AWB, @Price, @Id_CostCenter, @BillNr, @PalletNr, @PricePallet, @Weight);
	
	set @Id = SCOPE_IDENTITY();
end
GO
PRINT N'Creating Procedure [dbo].[spRequests_StatusWork]...';


GO
CREATE PROCEDURE [dbo].[spRequests_StatusWork]
	
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [RequestStatus].[Id] = 1 or [RequestStatus].[Id] = 2 or [RequestStatus].[Id] = 3
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_UpdateByUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_UpdateByUser]
	@Id int,
	@ETD datetime2(7),
	@ETA datetime2(7),
	@PalletNr int,
	@Weight int,
	@CommentRequester nvarchar(200)
AS
begin

	set nocount on;

	update dbo.[Requests]
    set [Requests].[ETD] = @ETD,
		[Requests].[ETA] = @ETA,
		[Requests].[PalletNr] = @PalletNr,
		[Requests].[Weight] = @Weight
	where [Requests].[Id] = @Id

	update dbo.[RequestInfo]
	set [RequestInfo].[CommentRequester] = @CommentRequester
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequestTypes_GetById]...';


GO
CREATE PROCEDURE [dbo].[spRequestTypes_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Type], [Active]
	from dbo.[RequestTypes]
	where [RequestTypes].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spSmtp_GetById]...';


GO
CREATE PROCEDURE [dbo].[spSmtp_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Server], [Port], [EmailSender], [Active]
	from dbo.[Smtp]
	where [Smtp].[Id] = @Id

end
GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '64a4be62-a222-434e-99db-6123c11dd4e1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('64a4be62-a222-434e-99db-6123c11dd4e1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ac9bea0-0ed0-4dae-a244-9e4ad7bc9310')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ac9bea0-0ed0-4dae-a244-9e4ad7bc9310')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c9d0dd3c-d5ae-4704-bed2-18069a3ba35c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c9d0dd3c-d5ae-4704-bed2-18069a3ba35c')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



if not exists (select * from dbo.AdGroups)
begin
    insert into dbo.AdGroups([Name], [Location], [FullDomain], [ShortDomain], [RightsName], [Active])
    values ('bra1_2515_IOTool_Level1', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level1', 'vt1.vitesco.com', 'vt1', 'Level1', 1),
           ('bra1_2515_IOTool_Level2', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level2', 'vt1.vitesco.com', 'vt1', 'Level2', 1),
           ('bra1_2515_IOTool_Level3', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level3', 'vt1.vitesco.com', 'vt1', 'Level3', 1),
           ('bra1_2515_IOTool_Level4', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level4', 'vt1.vitesco.com', 'vt1', 'Level4', 1),
           ('bra1_2515_IOTool_Level5', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level5', 'vt1.vitesco.com', 'vt1', 'Level5', 1)
end

if not exists (select * from dbo.Materials)
begin
    insert into dbo.Materials([Material], [Active])
    values('Materials', 1),
          ('Packaging', 1)
end

if not exists (select * from dbo.RequestStatus)
begin
    insert into dbo.RequestStatus([Status], [Active])
    values ('Open', 1),
           ('InProgress', 1),
           ('Resolved', 1),
           ('Closed', 1),
           ('Deleted', 1)
end

if not exists (select * from dbo.RequestTypes)
begin
    insert into dbo.RequestTypes([Type], [Active])
    values ('Inbound', 1),
           ('Outbound', 1)
end

if not exists (select * from dbo.Smtp)
begin
    insert into dbo.Smtp([Server], [Port], [EmailSender], [Active])
    values ('smtp.vitesco-technologies.net', 25, 'IOTool <VT_GX_SM_System_Notification_Service@vitesco-technologies.net>', 1)
end

if not exists (select * from dbo.TransportTypes)
begin
    insert into dbo.TransportTypes([Type], [Active] )
    values ('Land', 1),
           ('Parcel', 1),
           ('Sea', 1),
           ('Air', 1)
end
GO

GO
PRINT N'Update complete.';


GO
