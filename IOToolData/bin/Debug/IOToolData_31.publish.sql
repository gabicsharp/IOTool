/*
Deployment script for IOToolData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IOToolData"
:setvar DefaultFilePrefix "IOToolData"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Requests]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Requests] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Month]            NVARCHAR (50) NOT NULL,
    [Id_RequestType]   INT           NOT NULL,
    [Id_TransportType] INT           NOT NULL,
    [Week]             INT           NOT NULL,
    [ETD]              DATETIME2 (7) NOT NULL,
    [ETA]              DATETIME2 (7) NOT NULL,
    [Id_SupplierFrom]  INT           NOT NULL,
    [Id_SupplierTo]    INT           NOT NULL,
    [Id_Material]      INT           NOT NULL,
    [Id_Transporter]   INT           NOT NULL,
    [AWB]              NVARCHAR (50) NOT NULL,
    [Price]            MONEY         NOT NULL,
    [Id_CostCenter]    INT           NOT NULL,
    [BillNr]           NVARCHAR (50) NOT NULL,
    [PalletNr]         INT           NOT NULL,
    [PricePallet]      MONEY         NOT NULL,
    [Weight]           INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Requests])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Requests] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Requests] ([Id], [Month], [Id_RequestType], [Id_TransportType], [Week], [ETD], [ETA], [Id_SupplierFrom], [Id_SupplierTo], [Id_Material], [Id_Transporter], [AWB], [Price], [Id_CostCenter], [BillNr], [PalletNr], [PricePallet], [Weight])
        SELECT   [Id],
                 [Month],
                 [Id_RequestType],
                 [Id_TransportType],
                 [Week],
                 [ETD],
                 [ETA],
                 [Id_SupplierFrom],
                 [Id_SupplierTo],
                 [Id_Material],
                 [Id_Transporter],
                 [AWB],
                 [Price],
                 [Id_CostCenter],
                 [BillNr],
                 [PalletNr],
                 [PricePallet],
                 [Weight]
        FROM     [dbo].[Requests]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Requests] OFF;
    END

DROP TABLE [dbo].[Requests];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Requests]', N'Requests';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Procedure [dbo].[spRequests_GetByUser]...';


GO
ALTER PROCEDURE [dbo].[spRequests_GetByUser]
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType], [SupplierFrom].[Name], [SupplierTo].[Name],
		   [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], [Requests].[PalletNr] as [PalletNr], 
		   [Requests].[Weight] as [Weight], [RequestInfo].[CommentRequester] as [CommentRequester],
		   [RequestStatus].[Status] as [Status]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Status]
 	join dbo.[Users] on [RequestInfo].[Id_Request] = [Users].[Id]
	join dbo.[Suppliers] as SupplierFrom on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as SupplierTo on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	where [Users].[WindowsAccount] = @WindowsAccount

end
GO
PRINT N'Refreshing Procedure [dbo].[spRequests_GetById]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRequests_GetById]';


GO
PRINT N'Refreshing Procedure [dbo].[spRequests_GetByIdToDelete]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRequests_GetByIdToDelete]';


GO
PRINT N'Refreshing Procedure [dbo].[spRequests_Insert]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRequests_Insert]';


GO
PRINT N'Refreshing Procedure [dbo].[spRequests_StatusWork]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spRequests_StatusWork]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



if not exists (select * from dbo.AdGroups)
begin
    insert into dbo.AdGroups([Name], [Location], [FullDomain], [ShortDomain], [RightsName], [Active])
    values ('bra1_2515_IOTool_Level1', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level1', 'vt1.vitesco.com', 'vt1', 'Level1', 1),
           ('bra1_2515_IOTool_Level2', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level2', 'vt1.vitesco.com', 'vt1', 'Level2', 1),
           ('bra1_2515_IOTool_Level3', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level3', 'vt1.vitesco.com', 'vt1', 'Level3', 1),
           ('bra1_2515_IOTool_Level4', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level4', 'vt1.vitesco.com', 'vt1', 'Level4', 1),
           ('bra1_2515_IOTool_Level5', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level5', 'vt1.vitesco.com', 'vt1', 'Level5', 1)
end

if not exists (select * from dbo.Materials)
begin
    insert into dbo.Materials([Material], [Active])
    values('Materials', 1),
          ('Packaging', 1)
end

if not exists (select * from dbo.RequestStatus)
begin
    insert into dbo.RequestStatus([Status], [Active])
    values ('Open', 1),
           ('InProgress', 1),
           ('Resolved', 1),
           ('Closed', 1),
           ('Deleted', 1)
end

if not exists (select * from dbo.RequestTypes)
begin
    insert into dbo.RequestTypes([Type], [Active])
    values ('Inbound', 1),
           ('Outbound', 1)
end

if not exists (select * from dbo.Smtp)
begin
    insert into dbo.Smtp([Server], [Port], [EmailSender], [Active])
    values ('smtp.vitesco-technologies.net', 25, 'IOTool <VT_GX_SM_System_Notification_Service@vitesco-technologies.net>', 1)
end

if not exists (select * from dbo.TransportTypes)
begin
    insert into dbo.TransportTypes([Type], [Active] )
    values ('Land', 1),
           ('Parcel', 1),
           ('Sea', 1),
           ('Air', 1)
end
GO

GO
PRINT N'Update complete.';


GO
