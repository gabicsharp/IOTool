/*
Deployment script for IOTool

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IOTool"
:setvar DefaultFilePrefix "IOTool"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.VITESCOBVDB\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.VITESCOBVDB\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[AdGroups]...';


GO
CREATE TABLE [dbo].[AdGroups] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (50)  NOT NULL,
    [Location]    NVARCHAR (100) NOT NULL,
    [FullDomain]  NVARCHAR (50)  NOT NULL,
    [ShortDomain] NVARCHAR (50)  NOT NULL,
    [RightsName]  NVARCHAR (50)  NOT NULL,
    [Active]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Cities]...';


GO
CREATE TABLE [dbo].[Cities] (
    [Id]         INT            NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    [Id_Country] INT            NOT NULL,
    [Active]     INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[CostCenters]...';


GO
CREATE TABLE [dbo].[CostCenters] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [CC]     NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Countries]...';


GO
CREATE TABLE [dbo].[Countries] (
    [Id]     INT            NOT NULL,
    [Name]   NVARCHAR (100) NOT NULL,
    [Code]   NVARCHAR (10)  NOT NULL,
    [Active] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[EmailGroups]...';


GO
CREATE TABLE [dbo].[EmailGroups] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Email]       NVARCHAR (100) NOT NULL,
    [Description] NVARCHAR (100) NOT NULL,
    [Alias]       NVARCHAR (50)  NOT NULL,
    [Active]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Materials]...';


GO
CREATE TABLE [dbo].[Materials] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Material] NVARCHAR (50) NOT NULL,
    [Active]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Prices]...';


GO
CREATE TABLE [dbo].[Prices] (
    [Id]                       INT            IDENTITY (1, 1) NOT NULL,
    [Id_Transporter]           INT            NOT NULL,
    [LaneName]                 NVARCHAR (200) NOT NULL,
    [Id_OriginCountry]         INT            NOT NULL,
    [Id_OriginCity]            INT            NOT NULL,
    [Id_OriginZip]             INT            NOT NULL,
    [Id_DestinationCountry]    INT            NOT NULL,
    [Id_DestinationCity]       INT            NOT NULL,
    [Id_DestinationZip]        INT            NOT NULL,
    [Id_RequestType]           INT            NOT NULL,
    [Id_PartnerLocation]       INT            NOT NULL,
    [Minimum]                  MONEY          NOT NULL,
    [From1To4Pallets]          MONEY          NOT NULL,
    [From5To8Pallets]          MONEY          NOT NULL,
    [From9To12Pallets]         MONEY          NOT NULL,
    [From13To16Pallets]        MONEY          NOT NULL,
    [From17To20Pallets]        MONEY          NOT NULL,
    [From21To24Pallets]        MONEY          NOT NULL,
    [From25To28Pallets]        MONEY          NOT NULL,
    [From29To32Pallets]        MONEY          NOT NULL,
    [From33To36Pallets]        MONEY          NOT NULL,
    [From37To40Pallets]        MONEY          NOT NULL,
    [From41To44Pallets]        MONEY          NOT NULL,
    [From45To48Pallets]        MONEY          NOT NULL,
    [From49To52Pallets]        MONEY          NOT NULL,
    [From53To56Pallets]        MONEY          NOT NULL,
    [From57To60Pallets]        MONEY          NOT NULL,
    [From61To64Pallets]        MONEY          NOT NULL,
    [Maximum]                  MONEY          NOT NULL,
    [ShipmentFrequencyLTL]     NVARCHAR (50)  NOT NULL,
    [TransitTimeGroupage]      INT            NOT NULL,
    [TransitTimeLTL]           INT            NOT NULL,
    [CommentsLTL]              NVARCHAR (100) NULL,
    [Tons3_5]                  MONEY          NOT NULL,
    [TransitTime3_5Tons]       INT            NOT NULL,
    [ShipmentFrequency3_5Tons] NVARCHAR (50)  NOT NULL,
    [Tons7_5]                  MONEY          NOT NULL,
    [ShipmentFrequency7_5Tons] NVARCHAR (50)  NOT NULL,
    [Tons24]                   MONEY          NOT NULL,
    [ShipmentFrequency24Tons]  NVARCHAR (50)  NOT NULL,
    [TransitTimeFTL]           INT            NOT NULL,
    [CommentsFTL]              NVARCHAR (100) NULL,
    [Active]                   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[RequestInfo]...';


GO
CREATE TABLE [dbo].[RequestInfo] (
    [Id]                       INT            IDENTITY (1, 1) NOT NULL,
    [Id_Request]               INT            NOT NULL,
    [Id_Requester]             INT            NOT NULL,
    [Id_Processor]             INT            NOT NULL,
    [IntervalHoursToPickUp]    NVARCHAR (50)  NOT NULL,
    [CommentRequester]         NVARCHAR (200) NOT NULL,
    [CommentProcessor]         NVARCHAR (200) NOT NULL,
    [CommentRequesterForClose] NVARCHAR (200) NOT NULL,
    [CommentProcessorForClose] NVARCHAR (200) NOT NULL,
    [Id_RequestStatus]         INT            NOT NULL,
    [PremiumFreight]           INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Requests]...';


GO
CREATE TABLE [dbo].[Requests] (
    [Id]               INT           IDENTITY (1, 1) NOT NULL,
    [Month]            NVARCHAR (50) NOT NULL,
    [Id_RequestType]   INT           NOT NULL,
    [Id_TransportType] INT           NOT NULL,
    [Week]             INT           NOT NULL,
    [ETD]              DATETIME2 (7) NOT NULL,
    [ETA]              DATETIME2 (7) NOT NULL,
    [Id_SupplierFrom]  INT           NOT NULL,
    [Id_SupplierTo]    INT           NOT NULL,
    [Id_Material]      INT           NOT NULL,
    [Id_Transporter]   INT           NOT NULL,
    [AWB]              NVARCHAR (50) NOT NULL,
    [Price]            MONEY         NOT NULL,
    [Id_CostCenter]    INT           NOT NULL,
    [BillNr]           NVARCHAR (50) NOT NULL,
    [PalletNr]         INT           NOT NULL,
    [PricePallet]      MONEY         NOT NULL,
    [Weight]           INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[RequestStatus]...';


GO
CREATE TABLE [dbo].[RequestStatus] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Status] NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[RequestTypes]...';


GO
CREATE TABLE [dbo].[RequestTypes] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Type]   NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Smtp]...';


GO
CREATE TABLE [dbo].[Smtp] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Server]      NVARCHAR (100) NOT NULL,
    [Port]        INT            NOT NULL,
    [EmailSender] NVARCHAR (100) NOT NULL,
    [Active]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Suppliers]...';


GO
CREATE TABLE [dbo].[Suppliers] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [Name]       NVARCHAR (100) NOT NULL,
    [Id_Country] INT            NOT NULL,
    [Id_City]    INT            NOT NULL,
    [Address]    NVARCHAR (100) NOT NULL,
    [Zip]        NVARCHAR (50)  NOT NULL,
    [Active]     INT            NOT NULL,
    [Home]       INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Transporters]...';


GO
CREATE TABLE [dbo].[Transporters] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (100) NOT NULL,
    [Email]       NVARCHAR (100) NOT NULL,
    [PhoneNumber] NVARCHAR (50)  NOT NULL,
    [Id_Country]  INT            NOT NULL,
    [Id_City]     INT            NOT NULL,
    [Address]     NVARCHAR (100) NOT NULL,
    [Zip]         NVARCHAR (50)  NOT NULL,
    [Alias]       NVARCHAR (100) NOT NULL,
    [Active]      INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[TransportTypes]...';


GO
CREATE TABLE [dbo].[TransportTypes] (
    [Id]     INT           IDENTITY (1, 1) NOT NULL,
    [Type]   NVARCHAR (50) NOT NULL,
    [Active] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Table [dbo].[Users]...';


GO
CREATE TABLE [dbo].[Users] (
    [Id]             INT            IDENTITY (1, 1) NOT NULL,
    [Name]           NVARCHAR (100) NOT NULL,
    [Function]       NVARCHAR (100) NOT NULL,
    [Department]     NVARCHAR (100) NOT NULL,
    [Location]       NVARCHAR (100) NOT NULL,
    [CostCenter]     NVARCHAR (50)  NOT NULL,
    [Email]          NVARCHAR (150) NOT NULL,
    [WindowsAccount] NVARCHAR (50)  NOT NULL,
    [AccountRights]  NVARCHAR (50)  NOT NULL,
    [Active]         INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[spAdGroups_All]...';


GO
CREATE PROCEDURE [dbo].[spAdGroups_All]
AS
begin

	set nocount on;

	select [Id], [Name], [Location], [FullDomain], [ShortDomain], [RightsName], [Active]
	from dbo.[AdGroups]
	where [AdGroups].[Active] = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spCities_All]...';


GO
CREATE PROCEDURE [dbo].[spCities_All]
AS
begin

	set nocount on;

	select [Cities].[Id] as Id, [Cities].[Name] as City, [Countries].[Name] as Country
	from dbo.[Cities]
	join dbo.[Countries] on [Cities].[Id_Country] = [Countries].[Id]
	where [Cities].[Active] = 1
	order by [Countries].[Name] asc;

end
GO
PRINT N'Creating Procedure [dbo].[spCities_AllForACountry]...';


GO
CREATE PROCEDURE [dbo].[spCities_AllForACountry]
	@Id_Country int
AS
begin

	set nocount on;

	select [Id], [Name], [Id_Country], [Active]
	from dbo.[Cities]
	where Active = 1 and Id_Country = @Id_Country
	order by [Name] asc;

end
GO
PRINT N'Creating Procedure [dbo].[spCities_AllWithCountries]...';


GO
CREATE PROCEDURE [dbo].[spCities_AllWithCountries]
AS
begin

	set nocount on;

	select TOP(100) [Cities].[Id] as Id, [Cities].[Name] as City, [Countries].[Name] as Country
	from dbo.[Cities]
	join dbo.[Countries] on [Cities].[Id_Country] = [Countries].[Id]
	where [Cities].[Active] = 1
	order by [Cities].[Name] asc;

end
GO
PRINT N'Creating Procedure [dbo].[spCities_GetById]...';


GO
CREATE PROCEDURE [dbo].[spCities_GetById]
	@Id1 int,
	@Id2 int
AS
begin

	set nocount on;

	select [Cities].[Name]
	from dbo.[Cities]
	where [Cities].[Id] = @Id1 or [Cities].[Id] = @Id2

end
GO
PRINT N'Creating Procedure [dbo].[spCostCenters_All]...';


GO
CREATE PROCEDURE [dbo].[spCostCenters_All]
AS
begin

	set nocount on;

	select [Id], [CC], [Active]
	from dbo.[CostCenters]
	where [CostCenters].[Active] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spCountries_All]...';


GO
CREATE PROCEDURE [dbo].[spCountries_All]
AS
begin

	set nocount on;

	select [Id], [Name], [Code], [Active]
	from dbo.[Countries]
	where Active = 1
	order by [Name] asc;

end
GO
PRINT N'Creating Procedure [dbo].[spCountries_Delete]...';


GO
CREATE PROCEDURE [dbo].[spCountries_Delete]
	@Id int
AS
begin

	set nocount on;

	Update dbo.[Countries]
	set Active = 0
	where Id = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spCountries_GetById]...';


GO
CREATE PROCEDURE [dbo].[spCountries_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Name], [Code], [Active]
	from dbo.[Countries]
	where [Countries].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spEmailGroups_Get]...';


GO
CREATE PROCEDURE [dbo].[spEmailGroups_Get]
AS
begin

	set nocount on;

	select [Id], [Email], [Description], [Alias], [Active]
	from dbo.[EmailGroups]
	where [EmailGroups].[Active] = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spEmailNotification_CreateEmail]...';


GO
CREATE PROCEDURE [dbo].[spEmailNotification_CreateEmail]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [Users].[Name] as [RequesterName], [Users].[Email] as [RequesterEmail],
	       [RequestTypes].[Type] as [RequestType],
		   concat([SupplierFrom].[Name], ' - ', [CityFrom].[Name], ' - ', [CountryFrom].[Name]) as [From],
		   concat([SupplierTo].[Name], ' - ', [CityTo].[Name], ' - ', [CountryTo].[Name]) as [To],
		   [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], [Requests].[PalletNr] as [PalletNr],
		   [Requests].[Weight] as [Weight], [RequestInfo].[CommentRequester] as [CommentRequester]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Users] on [RequestInfo].[Id_Requester] = [Users].[Id]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join [Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join [Countries] as [CountryFrom] on [SupplierFrom].[Id_Country] = [CountryFrom].[Id]
	join [Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join [Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join [Countries] as [CountryTo] on [SupplierTo].[Id_Country] = [CountryTo].[Id]
	join [Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	where [Requests].[Id]  = @Id
end
GO
PRINT N'Creating Procedure [dbo].[spEmailNotification_DeleteEmailProcessor]...';


GO
CREATE PROCEDURE [dbo].[spEmailNotification_DeleteEmailProcessor]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType],
		   concat([SupplierFrom].[Name], ' - ', [CityFrom].[Name], ' - ', [CountryFrom].[Name]) as [From],
		   concat([SupplierTo].[Name], ' - ', [CityTo].[Name], ' - ', [CountryTo].[Name]) as [To],
		   [Requester].[Name] as [RequesterName], [Requester].[Email] as [RequesterEmail],
		   [Processor].[Name] as [ProcessorName], [Processor].[Email] as [ProcessorEmail],
		   [RequestInfo].[CommentProcessorForClose] as [CommentProcessorForClose]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Users] as [Requester] on [RequestInfo].[Id_Requester] = [Requester].[Id]
    join dbo.[Users] as [Processor] on [RequestInfo].[Id_Processor] = [Requester].[Id]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join [Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join [Countries] as [CountryFrom] on [SupplierFrom].[Id_Country] = [CountryFrom].[Id]
	join [Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join [Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join [Countries] as [CountryTo] on [SupplierTo].[Id_Country] = [CountryTo].[Id]
	join [Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	where [Requests].[Id]  = @Id
end
GO
PRINT N'Creating Procedure [dbo].[spEmailNotification_DeleteEmailRequester]...';


GO
CREATE PROCEDURE [dbo].[spEmailNotification_DeleteEmailRequester]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType],
		   concat([SupplierFrom].[Name], ' - ', [CityFrom].[Name], ' - ', [CountryFrom].[Name]) as [From],
		   concat([SupplierTo].[Name], ' - ', [CityTo].[Name], ' - ', [CountryTo].[Name]) as [To],
		   [Requester].[Name] as [RequesterName], [Requester].[Email] as [RequesterEmail],
		   [RequestInfo].[CommentRequesterForClose] as [RequesterCommentForClose]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Users] as [Requester] on [RequestInfo].[Id_Requester] = [Requester].[Id]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join [Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join [Countries] as [CountryFrom] on [SupplierFrom].[Id_Country] = [CountryFrom].[Id]
	join [Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join [Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join [Countries] as [CountryTo] on [SupplierTo].[Id_Country] = [CountryTo].[Id]
	join [Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	where [Requests].[Id]  = @Id
end
GO
PRINT N'Creating Procedure [dbo].[spEmailNotification_UpdateEmail]...';


GO
CREATE PROCEDURE [dbo].[spEmailNotification_UpdateEmail]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType],
		   concat([SupplierFrom].[Name], ' - ', [CityFrom].[Name], ' - ', [CountryFrom].[Name]) as [From],
		   concat([SupplierTo].[Name], ' - ', [CityTo].[Name], ' - ', [CountryTo].[Name]) as [To],
		   [Requester].[Name] as [RequesterName], [Requester].[Email] as [RequesterEmail],
		   [RequestInfo].[CommentRequester] as [RequesterComment],
		   [Processor].[Name] as [ProcessorName], [Processor].[Email] as [ProcessorEmail],
		   [RequestInfo].[CommentProcessor] as [ProcessorComment],
		   [RequestStatus].[Status] as [Status], [Requests].[AWB] as [AWB], [Requests].[Price] as [Price],
		   [TransportTypes].[Type] as [TransportType]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Users] as [Requester] on [RequestInfo].[Id_Requester] = [Requester].[Id]
	join dbo.[Users] as [Processor] on [RequestInfo].[Id_Processor] = [Processor].[Id]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join [Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join [Countries] as [CountryFrom] on [SupplierFrom].[Id_Country] = [CountryFrom].[Id]
	join [Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join [Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join [Countries] as [CountryTo] on [SupplierTo].[Id_Country] = [CountryTo].[Id]
	join [Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	join [RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	join [TransportTypes] on [Requests].[Id_TransportType] = [TransportTypes].[Id]
	where [Requests].[Id]  = @Id
end
GO
PRINT N'Creating Procedure [dbo].[spMaterials_All]...';


GO
CREATE PROCEDURE [dbo].[spMaterials_All]
AS
begin

	set nocount on;

	select [Id], [Material]
	from dbo.[Materials]
	where [Materials].[Active] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_AllSummary]...';


GO
CREATE PROCEDURE [dbo].[spPrices_AllSummary]
AS
begin

	set nocount on;

	select [Prices].[Id] as Id, [Transporters].[Name] as TransporterName, [Prices].[LaneName] as LaneName,
		   [OriginCountry].[Name] as OriginCountry, [OriginCity].[Name] as OriginCity,
		   [DestinationCountry].[Name] as DestinationCountry, [DestinationCity].[Name] as DestinationCity,
		   [RequestType].[Type] as RequestType, [Prices].[Minimum] as Minimum, [Prices].[From1To4Pallets] as From1To4Pallets,
		   [Prices].[From5To8Pallets] as From5To8Pallets, [Prices].[From9To12Pallets] as From9To12Pallets,
		   [Prices].[From13To16Pallets] as From13To16Pallets, [Prices].[From17To20Pallets] as From17To20Pallets,
		   [Prices].[From21To24Pallets] as From21To24Pallets, [Prices].[From25To28Pallets] as From25To28Pallets,
		   [Prices].[From29To32Pallets] as From29To32Pallets, [Prices].[From33To36Pallets] as From33To36Pallets,
		   [Prices].[From37To40Pallets] as From37To40Pallets, [Prices].[From41To44Pallets] as From41To44Pallets,
		   [Prices].[From45To48Pallets] as From45To48Pallets, [Prices].[From49To52Pallets] as From49To52Pallets,
		   [Prices].[From53To56Pallets] as From53To56Pallets, [Prices].[From57To60Pallets] as From57To60Pallets,
		   [Prices].[From61To64Pallets] as From61To64Pallets, [Prices].[Maximum] as Maximum,
		   [Prices].[ShipmentFrequencyLTL] as ShipmentFrequencyLTL, [Prices].[TransitTimeGroupage] as TransitTimeGroupage,
		   [Prices].[TransitTimeLTL] as TransitTimeLTL, [Prices].[CommentsLTL] as CommentsLTL,
		   [Prices].[Tons3_5] as Tons3_5, [Prices].[TransitTime3_5Tons] as TransitTime3_5Tons,
		   [Prices].[ShipmentFrequency3_5Tons] as ShipmentFrequency3_5Tons, [Prices].[Tons7_5] as Tons7_5,
		   [Prices].[ShipmentFrequency7_5Tons] as ShipmentFrequency7_5Tons, [Prices].[Tons24] as Tons24,
		   [Prices].[ShipmentFrequency24Tons] as ShipmentFrequency24Tons, [Prices].[TransitTimeFTL] as TransitTimeFTL,
		   [Prices].[CommentsFTL] as CommentsFTL
	from dbo.[Prices]
	join dbo.[Transporters] on [Prices].[Id_Transporter] = [Transporters].[Id]
	join dbo.[Countries] as OriginCountry on [Prices].[Id_OriginCountry] = [OriginCountry].[Id]
	join dbo.[Cities] as OriginCity on [Prices].[Id_OriginCity] = [OriginCity].[Id]
	join dbo.[Countries] as DestinationCountry on [Prices].[Id_DestinationCountry] = [DestinationCountry].[Id]
	join dbo.[Cities] as DestinationCity on [Prices].[Id_DestinationCity] = [DestinationCity].[Id]
	join dbo.[RequestTypes] as RequestType on [Prices].[Id_RequestType] = [RequestType].[Id]
	where [Prices].[Active] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_CountryAndCityHome]...';


GO
CREATE PROCEDURE [dbo].[spPrices_CountryAndCityHome]
AS
begin

	set nocount on;

	select [Countries].[Id] as IdCountry, [Countries].[Name] as Country, [Cities].[Id] as IdCity,  [Cities].[Name] as City
	from [dbo].[Suppliers]
	join Countries on Suppliers.[Id_Country] = Countries.[Id]
	join Cities on Suppliers.[Id_City] = Cities.[Id]
	where [Suppliers].[Active] = 1 and [Suppliers].[Home] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_Delete]...';


GO
CREATE PROCEDURE [dbo].[spPrices_Delete]
	@Id int
AS
begin

	set nocount on;

	Update dbo.[Prices]
	set [Prices].[Active] = 0
	where [Prices].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_GetById]...';


GO
CREATE PROCEDURE [dbo].[spPrices_GetById]
	@Id int
AS
begin

	set nocount on;

		select [Prices].[Id] as Id, [Transporters].[Name] as TransporterName, [Prices].[LaneName] as LaneName,
		   [OriginCountry].[Name] as OriginCountry, [OriginCity].[Name] as OriginCity,
		   [DestinationCountry].[Name] as DestinationCountry, [DestinationCity].[Name] as DestinationCity,
		   [RequestType].[Type] as RequestType
	from dbo.[Prices]
	join dbo.[Transporters] on [Prices].[Id_Transporter] = [Transporters].[Id]
	join dbo.[Countries] as OriginCountry on [Prices].[Id_OriginCountry] = [OriginCountry].[Id]
	join dbo.[Cities] as OriginCity on [Prices].[Id_OriginCity] = [OriginCity].[Id]
	join dbo.[Countries] as DestinationCountry on [Prices].[Id_DestinationCountry] = [DestinationCountry].[Id]
	join dbo.[Cities] as DestinationCity on [Prices].[Id_DestinationCity] = [DestinationCity].[Id]
	join dbo.[RequestTypes] as RequestType on [Prices].[Id_RequestType] = [RequestType].[Id]
	where [Prices].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_GetByIdStandardModel]...';


GO
CREATE PROCEDURE [dbo].[spPrices_GetByIdStandardModel]
	@Id_OriginCity int,
	@Id_DestinationCity int
AS
begin

	set nocount on;

	select *
	from dbo.[Prices]
	where [Prices].[Id_OriginCity] =  @Id_OriginCity and [Prices].[Id_DestinationCity] = @Id_DestinationCity

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_GetByIdToEdit]...';


GO
CREATE PROCEDURE [dbo].[spPrices_GetByIdToEdit]
	@Id int
AS
begin

	set nocount on;

	select [Prices].[Id] as Id, [Transporters].[Name] as TransporterName, [Prices].[LaneName] as LaneName,
		   [OriginCountry].[Name] as OriginCountry, [OriginCity].[Name] as OriginCity,
		   [DestinationCountry].[Name] as DestinationCountry, [DestinationCity].[Name] as DestinationCity,
		   [RequestType].[Type] as RequestType, [Prices].[Minimum] as Minimum, [Prices].[From1To4Pallets] as From1To4Pallets,
		   [Prices].[From5To8Pallets] as From5To8Pallets, [Prices].[From9To12Pallets] as From9To12Pallets,
		   [Prices].[From13To16Pallets] as From13To16Pallets, [Prices].[From17To20Pallets] as From17To20Pallets,
		   [Prices].[From21To24Pallets] as From21To24Pallets, [Prices].[From25To28Pallets] as From25To28Pallets,
		   [Prices].[From29To32Pallets] as From29To32Pallets, [Prices].[From33To36Pallets] as From33To36Pallets,
		   [Prices].[From37To40Pallets] as From37To40Pallets, [Prices].[From41To44Pallets] as From41To44Pallets,
		   [Prices].[From45To48Pallets] as From45To48Pallets, [Prices].[From49To52Pallets] as From49To52Pallets,
		   [Prices].[From53To56Pallets] as From53To56Pallets, [Prices].[From57To60Pallets] as From57To60Pallets,
		   [Prices].[From61To64Pallets] as From61To64Pallets, [Prices].[Maximum] as Maximum,
		   [Prices].[ShipmentFrequencyLTL] as ShipmentFrequencyLTL, [Prices].[TransitTimeGroupage] as TransitTimeGroupage,
		   [Prices].[TransitTimeLTL] as TransitTimeLTL, [Prices].[CommentsLTL] as CommentsLTL,
		   [Prices].[Tons3_5] as Tons3_5, [Prices].[TransitTime3_5Tons] as TransitTime3_5Tons,
		   [Prices].[ShipmentFrequency3_5Tons] as ShipmentFrequency3_5Tons, [Prices].[Tons7_5] as Tons7_5,
		   [Prices].[ShipmentFrequency7_5Tons] as ShipmentFrequency7_5Tons, [Prices].[Tons24] as Tons24,
		   [Prices].[ShipmentFrequency24Tons] as ShipmentFrequency24Tons, [Prices].[TransitTimeFTL] as TransitTimeFTL,
		   [Prices].[CommentsFTL] as CommentsFTL
	from dbo.[Prices]
	join dbo.[Transporters] on [Prices].[Id_Transporter] = [Transporters].[Id]
	join dbo.[Countries] as OriginCountry on [Prices].[Id_OriginCountry] = [OriginCountry].[Id]
	join dbo.[Cities] as OriginCity on [Prices].[Id_OriginCity] = [OriginCity].[Id]
	join dbo.[Countries] as DestinationCountry on [Prices].[Id_DestinationCountry] = [DestinationCountry].[Id]
	join dbo.[Cities] as DestinationCity on [Prices].[Id_DestinationCity] = [DestinationCity].[Id]
	join dbo.[RequestTypes] as RequestType on [Prices].[Id_RequestType] = [RequestType].[Id]
	where [Prices].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_Insert]...';


GO
CREATE PROCEDURE [dbo].[spPrices_Insert]
    @Id_Transporter INT, 
    @LaneName NVARCHAR(100), 
    @Id_OriginCountry INT, 
    @Id_OriginCity INT, 
    @Id_OriginZip INT, 
    @Id_DestinationCountry INT, 
    @Id_DestinationCity INT, 
    @Id_DestinationZip INT, 
    @Id_RequestType INT, 
    @Id_PartnerLocation INT, 
    @Minimum MONEY, 
    @From1To4Pallets MONEY, 
    @From5To8Pallets MONEY, 
    @From9To12Pallets MONEY, 
    @From13To16Pallets MONEY, 
    @From17To20Pallets MONEY, 
    @From21To24Pallets MONEY, 
    @From25To28Pallets MONEY, 
    @From29To32Pallets MONEY, 
    @From33To36Pallets MONEY, 
    @From37To40Pallets MONEY, 
    @From41To44Pallets MONEY, 
    @From45To48Pallets MONEY, 
    @From49To52Pallets MONEY, 
    @From53To56Pallets MONEY, 
    @From57To60Pallets MONEY, 
    @From61To64Pallets MONEY, 
    @Maximum MONEY, 
    @ShipmentFrequencyLTL NVARCHAR(50), 
    @TransitTimeGroupage INT, 
    @TransitTimeLTL INT, 
    @CommentsLTL NVARCHAR(100), 
    @Tons3_5 MONEY, 
    @TransitTime3_5Tons INT, 
    @ShipmentFrequency3_5Tons NVARCHAR(50), 
    @Tons7_5 MONEY, 
    @ShipmentFrequency7_5Tons NVARCHAR(50), 
    @Tons24 MONEY, 
    @ShipmentFrequency24Tons NVARCHAR(50), 
    @TransitTimeFTL INT, 
    @CommentsFTL NVARCHAR(100), 
    @Active INT
AS
begin

	set nocount on;

	insert into dbo.[Prices](Id_Transporter, LaneName, Id_OriginCountry, Id_OriginCity, Id_OriginZip,
                             Id_DestinationCountry, Id_DestinationCity, Id_DestinationZip, Id_RequestType,
                             Id_PartnerLocation, Minimum, From1To4Pallets, From5To8Pallets, From9To12Pallets, 
                             From13To16Pallets, From17To20Pallets, From21To24Pallets, From25To28Pallets,
                             From29To32Pallets, From33To36Pallets, From37To40Pallets, From41To44Pallets, 
                             From45To48Pallets, From49To52Pallets, From53To56Pallets, From57To60Pallets, 
                             From61To64Pallets, Maximum, ShipmentFrequencyLTL, TransitTimeGroupage, 
                             TransitTimeLTL, CommentsLTL, Tons3_5, TransitTime3_5Tons, ShipmentFrequency3_5Tons,
                             Tons7_5, ShipmentFrequency7_5Tons, Tons24, ShipmentFrequency24Tons,
                             TransitTimeFTL, CommentsFTL, Active)
	values (  
    @Id_Transporter, 
    @LaneName, 
    @Id_OriginCountry, 
    @Id_OriginCity, 
    @Id_OriginZip, 
    @Id_DestinationCountry, 
    @Id_DestinationCity, 
    @Id_DestinationZip, 
    @Id_RequestType, 
    @Id_PartnerLocation, 
    @Minimum, 
    @From1To4Pallets , 
    @From5To8Pallets , 
    @From9To12Pallets , 
    @From13To16Pallets , 
    @From17To20Pallets, 
    @From21To24Pallets, 
    @From25To28Pallets, 
    @From29To32Pallets, 
    @From33To36Pallets, 
    @From37To40Pallets, 
    @From41To44Pallets, 
    @From45To48Pallets, 
    @From49To52Pallets, 
    @From53To56Pallets, 
    @From57To60Pallets, 
    @From61To64Pallets, 
    @Maximum , 
    @ShipmentFrequencyLTL, 
    @TransitTimeGroupage, 
    @TransitTimeLTL, 
    @CommentsLTL, 
    @Tons3_5, 
    @TransitTime3_5Tons, 
    @ShipmentFrequency3_5Tons, 
    @Tons7_5, 
    @ShipmentFrequency7_5Tons, 
    @Tons24, 
    @ShipmentFrequency24Tons, 
    @TransitTimeFTL, 
    @CommentsFTL, 
    @Active);

end
GO
PRINT N'Creating Procedure [dbo].[spPrices_Update]...';


GO
CREATE PROCEDURE [dbo].[spPrices_Update]
    @Id INT,
    @Minimum MONEY, 
    @From1To4Pallets MONEY, 
    @From5To8Pallets MONEY, 
    @From9To12Pallets MONEY, 
    @From13To16Pallets MONEY, 
    @From17To20Pallets MONEY, 
    @From21To24Pallets MONEY, 
    @From25To28Pallets MONEY, 
    @From29To32Pallets MONEY, 
    @From33To36Pallets MONEY, 
    @From37To40Pallets MONEY, 
    @From41To44Pallets MONEY, 
    @From45To48Pallets MONEY, 
    @From49To52Pallets MONEY, 
    @From53To56Pallets MONEY, 
    @From57To60Pallets MONEY, 
    @From61To64Pallets MONEY, 
    @Maximum MONEY, 
    @ShipmentFrequencyLTL NVARCHAR(50), 
    @TransitTimeGroupage INT, 
    @TransitTimeLTL INT, 
    @CommentsLTL NVARCHAR(100), 
    @Tons3_5 MONEY, 
    @TransitTime3_5Tons INT, 
    @ShipmentFrequency3_5Tons NVARCHAR(50), 
    @Tons7_5 MONEY, 
    @ShipmentFrequency7_5Tons NVARCHAR(50), 
    @Tons24 MONEY, 
    @ShipmentFrequency24Tons NVARCHAR(50), 
    @TransitTimeFTL INT, 
    @CommentsFTL NVARCHAR(100)
AS
begin

	set nocount on;

	update dbo.[Prices]
    set  [Prices].Minimum = @Minimum, 
         [Prices].From1To4Pallets = @From1To4Pallets, 
         [Prices].From5To8Pallets = @From5To8Pallets,
         [Prices].From9To12Pallets = @From9To12Pallets, 
         [Prices].From13To16Pallets = @From13To16Pallets, 
         [Prices].From17To20Pallets = @From17To20Pallets, 
         [Prices].From21To24Pallets = @From21To24Pallets, 
         [Prices].From25To28Pallets = @From25To28Pallets,   
         [Prices].From29To32Pallets = @From29To32Pallets, 
         [Prices].From33To36Pallets = @From33To36Pallets,
         [Prices].From37To40Pallets = @From37To40Pallets, 
         [Prices].From41To44Pallets = @From41To44Pallets,       
         [Prices].From45To48Pallets = @From45To48Pallets, 
         [Prices].From49To52Pallets = @From49To52Pallets, 
         [Prices].From53To56Pallets = @From53To56Pallets, 
         [Prices].From57To60Pallets = @From57To60Pallets,  
         [Prices].From61To64Pallets = @From61To64Pallets, 
         [Prices].Maximum = @Maximum, 
         [Prices].ShipmentFrequencyLTL = @ShipmentFrequencyLTL, 
         [Prices].TransitTimeGroupage = @TransitTimeGroupage,   
         [Prices].TransitTimeLTL = @TransitTimeLTL, 
         [Prices].CommentsLTL = @CommentsLTL, 
         [Prices].Tons3_5 = @Tons3_5, 
         [Prices].TransitTime3_5Tons = @TransitTime3_5Tons, 
         [Prices].ShipmentFrequency3_5Tons = @ShipmentFrequency3_5Tons,
         [Prices].Tons7_5 = @Tons7_5, 
         [Prices].ShipmentFrequency7_5Tons = @ShipmentFrequency7_5Tons,
         [Prices].Tons24 = @Tons24, 
         [Prices].ShipmentFrequency24Tons = @ShipmentFrequency24Tons, 
         [Prices].TransitTimeFTL = @TransitTimeFTL, 
         [Prices].CommentsFTL = @CommentsFTL
  where [Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequestInfo_Insert]...';


GO
CREATE PROCEDURE [dbo].[spRequestInfo_Insert]
	@Id_Request int,
	@Id_Requester int,
	@Id_Processor int,
	@IntervalHoursToPickUp nvarchar(50),
	@CommentRequester nvarchar(200),
	@CommentProcessor nvarchar(200),
	@CommentRequesterForClose nvarchar(200),
	@CommentProcessorForClose nvarchar(200),
	@Id_RequestStatus int,
	@PremiumFreight int,
	@Id int output
AS
begin

	set nocount on;

	insert into dbo.[RequestInfo](Id_Request, Id_Requester, Id_Processor, IntervalHoursToPickUp, CommentRequester, CommentProcessor,
								  CommentRequesterForClose, CommentProcessorForClose, Id_RequestStatus, PremiumFreight)
	values(@Id_Request, @Id_Requester, @Id_Processor, @IntervalHoursToPickUp, @CommentRequester, @CommentProcessor,
		   @CommentRequesterForClose, @CommentProcessorForClose, @Id_RequestStatus, @PremiumFreight)
	
	set @Id = SCOPE_IDENTITY();
end
GO
PRINT N'Creating Procedure [dbo].[spRequests_DeleteByProcessor]...';


GO
CREATE PROCEDURE [dbo].[spRequests_DeleteByProcessor]
	@Id int,
	@CommentProcessorForClose nvarchar(200)
AS
begin

	set nocount on;

	Update dbo.[RequestInfo]
	set [RequestInfo].[Id_RequestStatus] = 5,
	    [RequestInfo].[CommentProcessorForClose] = @CommentProcessorForClose
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_DeleteByRequester]...';


GO
CREATE PROCEDURE [dbo].[spRequests_DeleteByRequester]
	@Id int,
	@CommentRequesterForClose nvarchar(200)
AS
begin

	set nocount on;

	Update dbo.[RequestInfo]
	set [RequestInfo].[Id_RequestStatus] = 5,
	    [RequestInfo].[CommentRequesterForClose] = @CommentRequesterForClose
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetById]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToDelete]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToDelete]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest], [RequestInfo].[CommentProcessorForClose] as [Comment]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToEdit]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToEdit]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [RequestStatus].[Status] as [Status], [RequestTypes].[Type] as [RequestType],
		   concat([SupplierFrom].[Name], ' - ', [CityFrom].[Name], ' - ', [CountryFrom].[Name]) as [From],
		   concat([SupplierTo].[Name], ' - ', [CityTo].[Name], ' - ', [CountryTo].[Name]) as [To],
		   [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], [Requests].[PalletNr] as [PalletNr],
		   [Requests].[Weight] as [Weight], [RequestInfo].[CommentRequester] as [CommentRequester],
		   [Transporters].[Id] as [Id_Transporter], [TransportTypes].[Id] as [Id_TransportType],
		   [Materials].[Id] as [Id_Material], [Requests].[AWB] as [AWB], [Requests].[BillNr] as [BillNr],
		   [Requests].[Price] as [Price], [RequestInfo].[PremiumFreight] as [PremiumFreight],
		   [CostCenters].[Id] as [Id_CostCenter], [RequestInfo].[CommentProcessor] as [CommentProcessor],
		   [RequestStatus].[Id] as [Id_RequestStatus]
	from dbo.[Requests]
	join [RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join [RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	join [RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join [Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join [Countries] as [CountryFrom] on [SupplierFrom].[Id_Country] = [CountryFrom].[Id]
	join [Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join [Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join [Countries] as [CountryTo] on [SupplierTo].[Id_Country] = [CountryTo].[Id]
	join [Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	join [Transporters] on [Requests].[Id_Transporter] = [Transporters].[Id]
	join [TransportTypes] on [Requests].[Id_TransportType] = [TransportTypes].[Id]
	join [Materials] on [Requests].[Id_Material] = [Materials].[Id]
	join [CostCenters] on [Requests].[Id_CostCenter] = [CostCenters].[Id]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToEditCalculation]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToEditCalculation]
	@Id int
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [Requests].[Id_SupplierFrom] as [IdFrom], [Requests].[Id_SupplierTo] as [IdTo], 
		   [Requests].[PalletNr] as [PalletNr], [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA]
	from dbo.[Requests]
	where [Requests].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByIdToSpecificUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByIdToSpecificUser]
	@Id int,
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

	 select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType], [SupplierFrom].[Name] as [From], 
			[SupplierTo].[Name] as [To], [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], 
			[Requests].[PalletNr] as [PalletNr], [Requests].[Weight] as [Weight], 
			[RequestInfo].[CommentRequester] as [CommentRequester], [RequestStatus].[Status] as [Status]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
 	join dbo.[Users] on [RequestInfo].[Id_Requester] = [Users].[Id]
	join dbo.[Suppliers] as SupplierFrom on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as SupplierTo on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	where [Requests].[Id] = @Id and [Users].[WindowsAccount] = @WindowsAccount

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetByUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetByUser]
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

  select [Requests].[Id] as [Id], [RequestTypes].[Type] as [RequestType], [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To],
		   [Requests].[ETD] as [ETD], [Requests].[ETA] as [ETA], [Requests].[PalletNr] as [PalletNr], 
		   [Requests].[Weight] as [Weight], [RequestInfo].[CommentRequester] as [CommentRequester],
		   [RequestStatus].[Status] as [Status]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
 	join dbo.[Users] on [RequestInfo].[Id_Requester] = [Users].[Id]
	join dbo.[Suppliers] as SupplierFrom on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as SupplierTo on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	where [Users].[WindowsAccount] = @WindowsAccount
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_GetDashboard]...';


GO
CREATE PROCEDURE [dbo].[spRequests_GetDashboard]
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [Requests].[Month] as [Month], [RequestTypes].[Type] as [RequestType],
		   [TransportTypes].[Type] as [TransportType], [Requests].[Week] as [Week], [Requests].[ETD] as [ETD],
		   [Requests].[ETA] as [ETA], [SupplierFrom].[Name] as [From], [CityFrom].[Name] as [FromLocation],
		   [SupplierTo].[Name] as [To], [CityTo].[Name] as [ToLocation], [Materials].[Material] as [Materials],
		   [Transporters].[Name] as [Transporter], [Requests].[AWB] as [AWB], [Requests].[Price] as [Price],
		   [CostCenters].[CC] as [CostCenter], [Requests].[BillNr] as [BillNr], [Requests].[PalletNr] as [PalletNr],
		   [Requests].[PricePallet] as [PricePallet]
	from dbo.[Requests]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[TransportTypes] on [Requests].[Id_TransportType] = [TransportTypes].[Id]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	join dbo.[Materials] on [Requests].[Id_Material] = [Materials].[Id]
	join dbo.[Transporters] on [Requests].[Id_Transporter] = [Transporters].[Id]
	join dbo.[CostCenters] on [Requests].[Id_CostCenter] = [CostCenters].[Id]
	join dbo.[RequestInfo] on [Requests].[Id] =[RequestInfo].[Id_Request]
	where [RequestInfo].[Id_RequestStatus] = 4
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_Insert]...';


GO
CREATE PROCEDURE [dbo].[spRequests_Insert]
	@Month nvarchar(50),
	@Id_RequestType int,
	@Id_TransportType int,
	@Week int,
	@ETD datetime2(7),
	@ETA datetime2(7),
	@Id_SupplierFrom int,
	@Id_SupplierTo int,
	@Id_Material int,
	@Id_Transporter int,
	@AWB nvarchar(50),
	@Price money,
	@Id_CostCenter int,
	@BillNr nvarchar(50),
	@PalletNr int,
	@PricePallet money,
	@Weight int,
	@Id int output
AS
begin

	set nocount on;

	insert into dbo.[Requests]([Month], Id_RequestType, Id_TransportType, [Week], ETD, ETA, Id_SupplierFrom, Id_SupplierTo, Id_Material,
							   Id_Transporter, AWB, Price, Id_CostCenter, BillNr, PalletNr, PricePallet, [Weight])
	values(@Month, @Id_RequestType, @Id_TransportType, @Week, @ETD, @ETA, @Id_SupplierFrom, @Id_SupplierTo, @Id_Material,
		   @Id_Transporter, @AWB, @Price, @Id_CostCenter, @BillNr, @PalletNr, @PricePallet, @Weight);
	
	set @Id = SCOPE_IDENTITY();
end
GO
PRINT N'Creating Procedure [dbo].[spRequests_StatusWork]...';


GO
CREATE PROCEDURE [dbo].[spRequests_StatusWork]
	
AS
begin

	set nocount on;

	select [Requests].[Id] as Id, [SupplierFrom].[Name] as [From], [SupplierTo].[Name] as [To], [RequestStatus].[Status] as [StatusRequest],
		   [RequestStatus].[Id] as [Id_StatusRequest]
	from dbo.[Requests]
	join dbo.[RequestInfo] on [Requests].[Id] = [RequestInfo].[Id_Request]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[RequestStatus] on [RequestInfo].[Id_RequestStatus] = [RequestStatus].[Id]
	where [RequestStatus].[Id] = 1 or [RequestStatus].[Id] = 2 or [RequestStatus].[Id] = 3
	order by [Requests].[Id] desc

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_UpdateByProcessor]...';


GO
CREATE PROCEDURE [dbo].[spRequests_UpdateByProcessor]
	@Id int,
	@Id_Transporter int,
	@Id_TransportType int,
	@Id_Material int,
	@AWB nvarchar(50),
	@BillNr nvarchar(50),
	@Price money,
	@PremiumFreight int,
	@Id_CostCenter int,
	@CommentProcessor nvarchar(200),
	@Id_RequestStatus int,
	@Id_Processor int
AS
begin

	set nocount on;

	update dbo.[Requests]
    set [Requests].[Id_Transporter] = @Id_Transporter,
		[Requests].[Id_TransportType] = @Id_TransportType,
		[Requests].[Id_Material] = @Id_Material,
		[Requests].[AWB] = @AWB,
		[Requests].[Price] = @Price,
		[Requests].[Id_CostCenter] = @Id_CostCenter
	where [Requests].[Id] = @Id

	update dbo.[RequestInfo]
	set [RequestInfo].[PremiumFreight] = @PremiumFreight,
		[RequestInfo].[CommentProcessor] = @CommentProcessor,
		[RequestInfo].[Id_RequestStatus] = @Id_RequestStatus,
		[RequestInfo].[Id_Processor] = @Id_Processor
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequests_UpdateByUser]...';


GO
CREATE PROCEDURE [dbo].[spRequests_UpdateByUser]
	@Id int,
	@ETD datetime2(7),
	@ETA datetime2(7),
	@PalletNr int,
	@Weight int,
	@CommentRequester nvarchar(200)
AS
begin

	set nocount on;

	update dbo.[Requests]
    set [Requests].[ETD] = @ETD,
		[Requests].[ETA] = @ETA,
		[Requests].[PalletNr] = @PalletNr,
		[Requests].[Weight] = @Weight
	where [Requests].[Id] = @Id

	update dbo.[RequestInfo]
	set [RequestInfo].[CommentRequester] = @CommentRequester
	where [RequestInfo].[Id_Request] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spRequestTypes_All]...';


GO
CREATE PROCEDURE [dbo].[spRequestTypes_All]
AS
begin

	set nocount on;

	select [Id], [Type]
	from dbo.[RequestTypes]
	where RequestTypes.Active = 1
	order by [Type] asc;

end
GO
PRINT N'Creating Procedure [dbo].[spRequestTypes_GetById]...';


GO
CREATE PROCEDURE [dbo].[spRequestTypes_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Type], [Active]
	from dbo.[RequestTypes]
	where [RequestTypes].[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spSmtp_Get]...';


GO
CREATE PROCEDURE [dbo].[spSmtp_Get]
AS
begin

	set nocount on;

	select [Id], [Server], [Port], [EmailSender], [Active]
	from dbo.[Smtp]
	where [Smtp].[Active] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_All]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_All]
AS
begin

	set nocount on;

	select Suppliers.[Id] as Id, Suppliers.[Name] as Name, Countries.[Name] as Country, Cities.[Name] as City, Suppliers.[Address] as Address, Suppliers.[Zip] as Zip, Suppliers.[Home] as Home
	from Suppliers
	join Countries on Suppliers.[Id_Country] = Countries.[Id]
	join Cities on Suppliers.[Id_City] = Cities.[Id]
	where Suppliers.[Active] = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_AllWithoutHome]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_AllWithoutHome]
AS
begin

	set nocount on;

	select Suppliers.[Id] as Id, Suppliers.[Name] as Name, Countries.[Name] as Country, Cities.[Name] as City, Suppliers.[Address] as Address, Suppliers.[Zip] as Zip
	from Suppliers
	join Countries on Suppliers.[Id_Country] = Countries.[Id]
	join Cities on Suppliers.[Id_City] = Cities.[Id]
	where Suppliers.[Active] = 1 and Suppliers.[Home] = 0;

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_Delete]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_Delete]
	@Id int
AS
begin

	set nocount on;

	Update dbo.[Suppliers]
	set Active = 0
	where Id = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_GetById]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_GetById]
	@Id int
AS
begin

	set nocount on;

	select Suppliers.[Id] as Id, Suppliers.[Name] as Name, Countries.[Name] as Country, Cities.[Name] as City, Suppliers.[Address] as Address, Suppliers.[Zip] as Zip, Suppliers.[Active] as Active, Suppliers.[Home] as Home
	from dbo.[Suppliers]
	join Countries on Suppliers.[Id_Country] = Countries.[Id]
	join Cities on Suppliers.[Id_City] = Cities.[Id]
	where Suppliers.[Id] = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_GetByIdWithIds]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_GetByIdWithIds]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Name], [Id_Country], [Id_City], [Address], [Zip], [Active], [Home]
	from dbo.[Suppliers]
	where Id = @Id;

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_Insert]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_Insert]
	@Name nvarchar(100),
	@Id_Country int,
	@Id_City int,
	@Address nvarchar(100),
	@Zip nvarchar(50),
	@Active int,
	@Home int
AS
begin

	set nocount on;

	insert into dbo.[Suppliers]([Name], Id_Country, Id_City, [Address], Zip, Active, Home)
	values (@Name, @Id_Country, @Id_City, @Address, @Zip, @Active, @Home);

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_JustHome]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_JustHome]
AS
begin

	set nocount on;

	select Suppliers.[Id] as Id, Suppliers.[Name] as Name, Countries.[Name] as Country, Cities.[Name] as City, Suppliers.[Address] as Address, Suppliers.[Zip] as Zip
	from Suppliers
	join Countries on Suppliers.[Id_Country] = Countries.[Id]
	join Cities on Suppliers.[Id_City] = Cities.[Id]
	where Suppliers.[Active] = 1 and Suppliers.[Home] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spSuppliers_Update]...';


GO
CREATE PROCEDURE [dbo].[spSuppliers_Update]
	@Id int,
	@Name nvarchar(100),
	@Id_Country int,
	@Id_City int,
	@Address nvarchar(100),
	@Zip nvarchar(50),
	@Active int,
	@Home int
AS
begin

	set nocount on;

	update dbo.[Suppliers]
	set Name = @Name,
		Id_Country = @Id_Country,
		Id_City = @Id_City,
		Address = @Address,
		Zip = @Zip,
		Active = @Active,
		Home = @Home
	where Id = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spTransporters_All]...';


GO
CREATE PROCEDURE [dbo].[spTransporters_All]
AS
begin

	set nocount on;

	select [Id], [Name], [Email], [PhoneNumber], [Id_Country], [Id_City], [Address], [Zip], [Alias], [Active]
	from dbo.[Transporters]
	where Active = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spTransporters_Delete]...';


GO
CREATE PROCEDURE [dbo].[spTransporters_Delete]
	@Id int
AS
begin

	set nocount on;

	Update dbo.[Transporters]
	set Active = 0
	where Id = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spTransporters_GetById]...';


GO
CREATE PROCEDURE [dbo].[spTransporters_GetById]
	@Id int
AS
begin

	set nocount on;

	select [Id], [Name], [Email], [PhoneNumber], [Id_Country], [Id_City], [Address], [Zip], [Alias], [Active]
	from dbo.[Transporters]
	where Id = @Id;

end
GO
PRINT N'Creating Procedure [dbo].[spTransporters_Insert]...';


GO
CREATE PROCEDURE [dbo].[spTransporters_Insert]
	@Name nvarchar(100),
	@Email nvarchar(100),
	@PhoneNumber nvarchar(50),
	@Id_Country int,
	@Id_City int,
	@Address nvarchar(100),
	@Zip nvarchar(50),
	@Alias nvarchar(100),
	@Active int
AS
begin

	set nocount on;

	insert into dbo.[Transporters]([Name], Email, PhoneNumber, Id_Country, Id_City, [Address], Zip, Alias, Active)
	values (@Name, @Email, @PhoneNumber, @Id_Country, @Id_City, @Address, @Zip, @Alias, @Active);

end
GO
PRINT N'Creating Procedure [dbo].[spTransporters_Update]...';


GO
CREATE PROCEDURE [dbo].[spTransporters_Update]
	@Id int,
	@Name nvarchar(100),
	@Email nvarchar(100),
	@PhoneNumber nvarchar(50),
	@Id_Country int,
	@Id_City int,
	@Address nvarchar(100),
	@Zip nvarchar(50),
	@Alias nvarchar(100),
	@Active int
AS
begin

	set nocount on;

	update dbo.[Transporters]
	set Name = @Name,
		Email = @Email,
		PhoneNumber = @PhoneNumber,
		Id_Country = @Id_Country,
		Id_City = @Id_City,
		Address = @Address,
		Zip = @Zip,
		Alias = @Alias
	where Id = @Id

end
GO
PRINT N'Creating Procedure [dbo].[spTransportTypes_All]...';


GO
CREATE PROCEDURE [dbo].[spTransportTypes_All]
AS
begin

	set nocount on;

	select [Id], [Type]
	from dbo.[TransportTypes]
	where [TransportTypes].[Active] = 1

end
GO
PRINT N'Creating Procedure [dbo].[spUsers_All]...';


GO
CREATE PROCEDURE [dbo].[spUsers_All]
AS
begin

	set nocount on;

	select [Id], [Name], [Function], [Department], [Location], [CostCenter], [Email], [WindowsAccount], [AccountRights], [Active]
	from dbo.[Users]
	where Users.Active = 1;

end
GO
PRINT N'Creating Procedure [dbo].[spUsers_GetByWA]...';


GO
CREATE PROCEDURE [dbo].[spUsers_GetByWA]
	@WindowsAccount nvarchar(50)
AS
begin

	set nocount on;

	select [Id], [Name], [Function], [Department], [Location], [CostCenter], [Email], [WindowsAccount], [AccountRights], [Active]
	from dbo.[Users]
	where [Users].[WindowsAccount] = @WindowsAccount;

end
GO
PRINT N'Creating Procedure [dbo].[spUsers_Insert]...';


GO
CREATE PROCEDURE [dbo].[spUsers_Insert]
	@Name nvarchar(100),
	@Function nvarchar(100),
	@Department nvarchar(100),
	@Location nvarchar(100),
	@CostCenter nvarchar(50),
	@Email nvarchar(150),
	@WindowsAccount nvarchar(50),
	@AccountRights nvarchar(50),
	@Active int
AS
begin

	set nocount on;

	insert into dbo.[Users]([Name], [Function], [Department], [Location], [CostCenter], [Email], [WindowsAccount], [AccountRights], [Active])
    values(@Name, @Function, @Department, @Location, @CostCenter, @Email, @WindowsAccount, @AccountRights, @Active);

end
GO
PRINT N'Creating Procedure [dbo].[spUsers_Update]...';


GO
CREATE PROCEDURE [dbo].[spUsers_Update]
	@Id int,
	@Name nvarchar(100),
	@Function nvarchar(100),
	@Department nvarchar(100),
	@Location nvarchar(100),
	@CostCenter nvarchar(50),
	@Email nvarchar(150),
	@WindowsAccount nvarchar(50),
	@AccountRights nvarchar(50),
	@Active int
AS
begin

	set nocount on;

	update dbo.[Users]
	set [Name] = @Name,
		[Function] = @Function,
		[Department] = @Department,
		[Location] = @Location,
		[CostCenter] = @CostCenter,
		[Email] = @Email,
		[WindowsAccount] = @WindowsAccount,
		[AccountRights] = @AccountRights,
		[Active] = @Active
	where [Id] = @Id

end
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b99bf994-9f1a-4ddd-acd1-3a7b7af2e6dc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b99bf994-9f1a-4ddd-acd1-3a7b7af2e6dc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '10bd94f7-5ccd-4c57-a076-645a213ddb0d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('10bd94f7-5ccd-4c57-a076-645a213ddb0d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '916b7873-96a3-4333-8b32-77971d12fd2e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('916b7873-96a3-4333-8b32-77971d12fd2e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c80470e0-96a3-4c54-bfe5-5bb38577bdd1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c80470e0-96a3-4c54-bfe5-5bb38577bdd1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b41a3ea0-55ef-4dc7-831f-c9cd69edea27')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b41a3ea0-55ef-4dc7-831f-c9cd69edea27')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '42df3104-9edb-4764-b844-f84c23beffff')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('42df3104-9edb-4764-b844-f84c23beffff')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '8d4f88c7-7f13-4735-a75c-592937ca27bf')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('8d4f88c7-7f13-4735-a75c-592937ca27bf')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '82ca1015-8817-4017-bbac-1aedaeb87653')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('82ca1015-8817-4017-bbac-1aedaeb87653')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '562fc00f-278c-47a7-937a-920facdd1e1f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('562fc00f-278c-47a7-937a-920facdd1e1f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9692c7b8-51c6-4233-9d94-a303e5904c6e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9692c7b8-51c6-4233-9d94-a303e5904c6e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9e12388d-d8cc-4020-9468-22e13ddc4b3a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9e12388d-d8cc-4020-9468-22e13ddc4b3a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6461330f-1e5c-4bcf-a1c5-473fb5151f25')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6461330f-1e5c-4bcf-a1c5-473fb5151f25')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '704223cf-38a8-43ec-975f-4b4921fbaf08')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('704223cf-38a8-43ec-975f-4b4921fbaf08')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a55a8dca-dfa6-4da3-af58-1355e7b1f0dd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a55a8dca-dfa6-4da3-af58-1355e7b1f0dd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e3748ffc-1332-4459-abb6-a7be911a4e82')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e3748ffc-1332-4459-abb6-a7be911a4e82')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '19690cd6-5b28-45d3-9ee0-c22fd5e945bc')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('19690cd6-5b28-45d3-9ee0-c22fd5e945bc')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '53fff0cc-6358-4f43-82fe-55b59115ec72')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('53fff0cc-6358-4f43-82fe-55b59115ec72')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '6d13e731-3d0c-4d3c-9352-3f8c865a0126')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('6d13e731-3d0c-4d3c-9352-3f8c865a0126')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'be0ec5c8-3120-4795-863d-87457c3bcc0b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('be0ec5c8-3120-4795-863d-87457c3bcc0b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '684c7e28-e2c0-432b-b276-949cfb42e725')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('684c7e28-e2c0-432b-b276-949cfb42e725')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7734a393-e883-43e3-bd3b-c3674aa342aa')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7734a393-e883-43e3-bd3b-c3674aa342aa')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ffda57d3-8cb1-4349-93cd-8bd3a360e26f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ffda57d3-8cb1-4349-93cd-8bd3a360e26f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a6ee89e0-8c18-4414-b55e-eef0976a2b8f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a6ee89e0-8c18-4414-b55e-eef0976a2b8f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e43ee9cf-76f4-4f6b-8996-88313d486b8d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e43ee9cf-76f4-4f6b-8996-88313d486b8d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f25496bc-189d-4235-8e21-1aceb377c9b8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f25496bc-189d-4235-8e21-1aceb377c9b8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'daa0ed93-43e3-44fe-9c40-bc16a1ebc127')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('daa0ed93-43e3-44fe-9c40-bc16a1ebc127')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '64a4be62-a222-434e-99db-6123c11dd4e1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('64a4be62-a222-434e-99db-6123c11dd4e1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0ac9bea0-0ed0-4dae-a244-9e4ad7bc9310')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0ac9bea0-0ed0-4dae-a244-9e4ad7bc9310')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c9d0dd3c-d5ae-4704-bed2-18069a3ba35c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c9d0dd3c-d5ae-4704-bed2-18069a3ba35c')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



if not exists (select * from dbo.AdGroups)
begin
    insert into dbo.AdGroups([Name], [Location], [FullDomain], [ShortDomain], [RightsName], [Active])
    values ('bra1_2515_IOTool_Level1', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level1', 'vt1.vitesco.com', 'vt1', 'Level1', 1),
           ('bra1_2515_IOTool_Level2', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level2', 'vt1.vitesco.com', 'vt1', 'Level2', 1),
           ('bra1_2515_IOTool_Level3', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level3', 'vt1.vitesco.com', 'vt1', 'Level3', 1),
           ('bra1_2515_IOTool_Level4', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level4', 'vt1.vitesco.com', 'vt1', 'Level4', 1),
           ('bra1_2515_IOTool_Level5', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level5', 'vt1.vitesco.com', 'vt1', 'Level5', 1)
end

if not exists (select * from dbo.Materials)
begin
    insert into dbo.Materials([Material], [Active])
    values('Materials', 1),
          ('Packaging', 1)
end

if not exists (select * from dbo.RequestStatus)
begin
    insert into dbo.RequestStatus([Status], [Active])
    values ('Open', 1),
           ('InProgress', 1),
           ('Resolved', 1),
           ('Closed', 1),
           ('Deleted', 1)
end

if not exists (select * from dbo.RequestTypes)
begin
    insert into dbo.RequestTypes([Type], [Active])
    values ('Inbound', 1),
           ('Outbound', 1)
end

if not exists (select * from dbo.Smtp)
begin
    insert into dbo.Smtp([Server], [Port], [EmailSender], [Active])
    values ('smtp.vitesco-technologies.net', 25, 'IOTool <VT_GX_SM_System_Notification_Service@vitesco-technologies.net>', 1)
end

if not exists (select * from dbo.TransportTypes)
begin
    insert into dbo.TransportTypes([Type], [Active] )
    values ('Land', 1),
           ('Parcel', 1),
           ('Sea', 1),
           ('Air', 1)
end

if not exists (select * from dbo.Suppliers)
begin
    insert into dbo.Suppliers([Name], [Id_Country], [Id_City], [Address], [Zip], [Active], [Home])
    values ('Vitesco Technologies', 171, 13099, 'Str. Hermann Oberth 23', '507075', 1, 1)
end

if not exists (select * from dbo.Transporters)
begin
    insert into dbo.Transporters([Name], [Email], [PhoneNumber], [Id_Country], [Id_City], [Address], [Zip], [Alias], [Active])
    values ('Fartud', 'office@fartud.ro', '0712345678', 171, 13099, 'Str. Hermann Oberth 23', '507075', 'Fartud', 1)
end

if not exists (select * from dbo.EmailGroups)
begin
    insert into dbo.EmailGroups([Email], [Description], [Alias], [Active] )
    values ('uidn3769@vitesco.com', 'Logistic Team', 'Logistic Team', 1)
end

if not exists (select * from dbo.CostCenters)
begin
    insert into dbo.CostCenters([CC], [Active] )
    values ('00-00', 1)
end
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
