/*
Deployment script for IOToolData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IOToolData"
:setvar DefaultFilePrefix "IOToolData"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Starting rebuilding table [dbo].[Prices]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Prices] (
    [Id]                       INT            IDENTITY (1, 1) NOT NULL,
    [Id_Transporter]           INT            NOT NULL,
    [LaneName]                 NVARCHAR (200) NOT NULL,
    [Id_OriginCountry]         INT            NOT NULL,
    [Id_OriginCity]            INT            NOT NULL,
    [Id_OriginZip]             INT            NOT NULL,
    [Id_DestinationCountry]    INT            NOT NULL,
    [Id_DestinationCity]       INT            NOT NULL,
    [Id_DestinationZip]        INT            NOT NULL,
    [Id_RequestType]           INT            NOT NULL,
    [Id_PartnerLocation]       INT            NOT NULL,
    [Minimum]                  MONEY          NOT NULL,
    [From1To4Pallets]          MONEY          NOT NULL,
    [From5To8Pallets]          MONEY          NOT NULL,
    [From9To12Pallets]         MONEY          NOT NULL,
    [From13To16Pallets]        MONEY          NOT NULL,
    [From17To20Pallets]        MONEY          NOT NULL,
    [From21To24Pallets]        MONEY          NOT NULL,
    [From25To28Pallets]        MONEY          NOT NULL,
    [From29To32Pallets]        MONEY          NOT NULL,
    [From33To36Pallets]        MONEY          NOT NULL,
    [From37To40Pallets]        MONEY          NOT NULL,
    [From41To44Pallets]        MONEY          NOT NULL,
    [From45To48Pallets]        MONEY          NOT NULL,
    [From49To52Pallets]        MONEY          NOT NULL,
    [From53To56Pallets]        MONEY          NOT NULL,
    [From57To60Pallets]        MONEY          NOT NULL,
    [From61To64Pallets]        MONEY          NOT NULL,
    [Maximum]                  MONEY          NOT NULL,
    [ShipmentFrequencyLTL]     NVARCHAR (50)  NOT NULL,
    [TransitTimeGroupage]      INT            NOT NULL,
    [TransitTimeLTL]           INT            NOT NULL,
    [CommentsLTL]              NVARCHAR (100) NULL,
    [Tons3_5]                  MONEY          NOT NULL,
    [TransitTime3_5Tons]       INT            NOT NULL,
    [ShipmentFrequency3_5Tons] NVARCHAR (50)  NOT NULL,
    [Tons7_5]                  MONEY          NOT NULL,
    [ShipmentFrequency7_5Tons] NVARCHAR (50)  NOT NULL,
    [Tons24]                   MONEY          NOT NULL,
    [ShipmentFrequency24Tons]  NVARCHAR (50)  NOT NULL,
    [TransitTimeFTL]           INT            NOT NULL,
    [CommentsFTL]              NVARCHAR (100) NULL,
    [Active]                   INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Prices])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Prices] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Prices] ([Id], [Id_Transporter], [LaneName], [Id_OriginCountry], [Id_OriginCity], [Id_OriginZip], [Id_DestinationCountry], [Id_DestinationCity], [Id_DestinationZip], [Id_RequestType], [Id_PartnerLocation], [Minimum], [From1To4Pallets], [From5To8Pallets], [From9To12Pallets], [From13To16Pallets], [From17To20Pallets], [From21To24Pallets], [From25To28Pallets], [From29To32Pallets], [From33To36Pallets], [From37To40Pallets], [From41To44Pallets], [From45To48Pallets], [From49To52Pallets], [From53To56Pallets], [From57To60Pallets], [From61To64Pallets], [Maximum], [ShipmentFrequencyLTL], [TransitTimeGroupage], [TransitTimeLTL], [CommentsLTL], [Tons3_5], [TransitTime3_5Tons], [ShipmentFrequency3_5Tons], [Tons7_5], [ShipmentFrequency7_5Tons], [Tons24], [ShipmentFrequency24Tons], [TransitTimeFTL], [CommentsFTL], [Active])
        SELECT   [Id],
                 [Id_Transporter],
                 [LaneName],
                 [Id_OriginCountry],
                 [Id_OriginCity],
                 [Id_OriginZip],
                 [Id_DestinationCountry],
                 [Id_DestinationCity],
                 [Id_DestinationZip],
                 [Id_RequestType],
                 [Id_PartnerLocation],
                 [Minimum],
                 [From1To4Pallets],
                 [From5To8Pallets],
                 [From9To12Pallets],
                 [From13To16Pallets],
                 [From17To20Pallets],
                 [From21To24Pallets],
                 [From25To28Pallets],
                 [From29To32Pallets],
                 [From33To36Pallets],
                 [From37To40Pallets],
                 [From41To44Pallets],
                 [From45To48Pallets],
                 [From49To52Pallets],
                 [From53To56Pallets],
                 [From57To60Pallets],
                 [From61To64Pallets],
                 [Maximum],
                 [ShipmentFrequencyLTL],
                 [TransitTimeGroupage],
                 [TransitTimeLTL],
                 [CommentsLTL],
                 [Tons3_5],
                 [TransitTime3_5Tons],
                 [ShipmentFrequency3_5Tons],
                 [Tons7_5],
                 [ShipmentFrequency7_5Tons],
                 [Tons24],
                 [ShipmentFrequency24Tons],
                 [TransitTimeFTL],
                 [CommentsFTL],
                 [Active]
        FROM     [dbo].[Prices]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Prices] OFF;
    END

DROP TABLE [dbo].[Prices];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Prices]', N'Prices';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering Procedure [dbo].[spRequests_GetDashboard]...';


GO
ALTER PROCEDURE [dbo].[spRequests_GetDashboard]
AS
begin

	set nocount on;

	select [Requests].[Id] as [Id], [Requests].[Month] as [Month], [RequestTypes].[Type] as [RequestType],
		   [TransportTypes].[Type] as [TransportType], [Requests].[Week] as [Week], [Requests].[ETD] as [ETD],
		   [Requests].[ETA] as [ETA], [SupplierFrom].[Name] as [From], [CityFrom].[Name] as [FromLocation],
		   [SupplierTo].[Name] as [To], [CityTo].[Name] as [ToLocation], [Materials].[Material] as [Materials],
		   [Transporters].[Name] as [Transporter], [Requests].[AWB] as [AWB], [Requests].[Price] as [Price],
		   [CostCenters].[CC] as [CostCenter], [Requests].[BillNr] as [BillNr], [Requests].[PalletNr] as [PalletNr],
		   [Requests].[PricePallet] as [PricePallet]
	from dbo.[Requests]
	join dbo.[RequestTypes] on [Requests].[Id_RequestType] = [RequestTypes].[Id]
	join dbo.[TransportTypes] on [Requests].[Id_TransportType] = [TransportTypes].[Id]
	join dbo.[Suppliers] as [SupplierFrom] on [Requests].[Id_SupplierFrom] = [SupplierFrom].[Id]
	join dbo.[Cities] as [CityFrom] on [SupplierFrom].[Id_City] = [CityFrom].[Id]
	join dbo.[Suppliers] as [SupplierTo] on [Requests].[Id_SupplierTo] = [SupplierTo].[Id]
	join dbo.[Cities] as [CityTo] on [SupplierTo].[Id_City] = [CityTo].[Id]
	join dbo.[Materials] on [Requests].[Id_Material] = [Materials].[Id]
	join dbo.[Transporters] on [Requests].[Id_Transporter] = [Transporters].[Id]
	join dbo.[CostCenters] on [Requests].[Id_CostCenter] = [CostCenters].[Id]
	join dbo.[RequestInfo] on [Requests].[Id] =[RequestInfo].[Id_Request]
	where [RequestInfo].[Id_RequestStatus] = 4
	order by [Requests].[Id] desc

end
GO
PRINT N'Refreshing Procedure [dbo].[spPrices_AllSummary]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_AllSummary]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_Delete]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_Delete]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_GetById]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_GetById]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_GetByIdStandardModel]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_GetByIdStandardModel]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_GetByIdToEdit]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_GetByIdToEdit]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_Insert]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_Insert]';


GO
PRINT N'Refreshing Procedure [dbo].[spPrices_Update]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spPrices_Update]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/



if not exists (select * from dbo.AdGroups)
begin
    insert into dbo.AdGroups([Name], [Location], [FullDomain], [ShortDomain], [RightsName], [Active])
    values ('bra1_2515_IOTool_Level1', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level1', 'vt1.vitesco.com', 'vt1', 'Level1', 1),
           ('bra1_2515_IOTool_Level2', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level2', 'vt1.vitesco.com', 'vt1', 'Level2', 1),
           ('bra1_2515_IOTool_Level3', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level3', 'vt1.vitesco.com', 'vt1', 'Level3', 1),
           ('bra1_2515_IOTool_Level4', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level4', 'vt1.vitesco.com', 'vt1', 'Level4', 1),
           ('bra1_2515_IOTool_Level5', 'vt1.vitesco.com/lda/ro/bra1/Administration/DSOfficeGroups/bra1_2515_IOTool_Level5', 'vt1.vitesco.com', 'vt1', 'Level5', 1)
end

if not exists (select * from dbo.Materials)
begin
    insert into dbo.Materials([Material], [Active])
    values('Materials', 1),
          ('Packaging', 1)
end

if not exists (select * from dbo.RequestStatus)
begin
    insert into dbo.RequestStatus([Status], [Active])
    values ('Open', 1),
           ('InProgress', 1),
           ('Resolved', 1),
           ('Closed', 1),
           ('Deleted', 1)
end

if not exists (select * from dbo.RequestTypes)
begin
    insert into dbo.RequestTypes([Type], [Active])
    values ('Inbound', 1),
           ('Outbound', 1)
end

if not exists (select * from dbo.Smtp)
begin
    insert into dbo.Smtp([Server], [Port], [EmailSender], [Active])
    values ('smtp.vitesco-technologies.net', 25, 'IOTool <VT_GX_SM_System_Notification_Service@vitesco-technologies.net>', 1)
end

if not exists (select * from dbo.TransportTypes)
begin
    insert into dbo.TransportTypes([Type], [Active] )
    values ('Land', 1),
           ('Parcel', 1),
           ('Sea', 1),
           ('Air', 1)
end

if not exists (select * from dbo.Suppliers)
begin
    insert into dbo.Suppliers([Name], [Id_Country], [Id_City], [Address], [Zip], [Active], [Home])
    values ('Vitesco Technologies', 171, 13099, 'Str. Hermann Oberth 23', '507075', 1, 1)
end

if not exists (select * from dbo.Transporters)
begin
    insert into dbo.Transporters([Name], [Email], [PhoneNumber], [Id_Country], [Id_City], [Address], [Zip], [Alias], [Active])
    values ('Fartud', 'office@fartud.ro', '0712345678', 171, 13099, 'Str. Hermann Oberth 23', '507075', 'Fartud', 1)
end

if not exists (select * from dbo.EmailGroups)
begin
    insert into dbo.EmailGroups([Email], [Description], [Alias], [Active] )
    values ('uidn3769@vitesco.com', 'Logistic Team', 'Logistic Team', 1)
end

if not exists (select * from dbo.CostCenters)
begin
    insert into dbo.CostCenters([CC], [Active] )
    values ('00-00', 1)
end
GO

GO
PRINT N'Update complete.';


GO
